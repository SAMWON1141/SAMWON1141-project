export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[];

export interface Database {
  public: {
    Tables: {
      profiles: {
        Row: {
          id: string;
          email: string;
          name: string;
          phone: string | null;
          account_type: "admin" | "user";
          company_name: string | null;
          company_address: string | null;
          business_type: string | null;
          company_description: string | null;
          establishment_date: string | null;
          employee_count: number | null;
          company_website: string | null;
          position: string | null;
          department: string | null;
          bio: string | null;
          profile_image_url: string | null;
          last_login_at: string | null;
          password_changed_at: string | null;
          login_count: number;
          is_active: boolean;
          login_attempts: number;
          last_login_attempt: string | null;
          last_failed_login: string | null;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id: string;
          email: string;
          name: string;
          phone?: string | null;
          account_type?: "admin" | "user";
          company_name?: string | null;
          company_address?: string | null;
          business_type?: string | null;
          company_description?: string | null;
          establishment_date?: string | null;
          employee_count?: number | null;
          company_website?: string | null;
          position?: string | null;
          department?: string | null;
          bio?: string | null;
          profile_image_url?: string | null;
          last_login_at?: string | null;
          password_changed_at?: string | null;
          login_count?: number;
          is_active?: boolean;
          login_attempts?: number;
          last_login_attempt?: string | null;
          last_failed_login?: string | null;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          email?: string;
          name?: string;
          phone?: string | null;
          account_type?: "admin" | "user";
          company_name?: string | null;
          company_address?: string | null;
          business_type?: string | null;
          company_description?: string | null;
          establishment_date?: string | null;
          employee_count?: number | null;
          company_website?: string | null;
          position?: string | null;
          department?: string | null;
          bio?: string | null;
          profile_image_url?: string | null;
          last_login_at?: string | null;
          password_changed_at?: string | null;
          login_count?: number;
          is_active?: boolean;
          login_attempts?: number;
          last_login_attempt?: string | null;
          last_failed_login?: string | null;
          created_at?: string;
          updated_at?: string;
        };
      };
      farms: {
        Row: {
          id: string;
          farm_name: string;
          description: string | null;
          farm_address: string;
          farm_detailed_address: string | null;
          farm_type: string | null;
          owner_id: string;
          manager_phone: string | null;
          manager_name: string | null;
          is_active: boolean;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          farm_name: string;
          description?: string | null;
          farm_address: string;
          farm_detailed_address?: string | null;
          farm_type?: string | null;
          owner_id: string;
          manager_phone?: string | null;
          manager_name?: string | null;
          is_active?: boolean;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          farm_name?: string;
          description?: string | null;
          farm_address?: string;
          farm_detailed_address?: string | null;
          farm_type?: string | null;
          owner_id?: string;
          manager_phone?: string | null;
          manager_name?: string | null;
          is_active?: boolean;
          created_at?: string;
          updated_at?: string;
        };
      };
      farm_members: {
        Row: {
          id: string;
          farm_id: string;
          user_id: string;
          role: "owner" | "manager" | "viewer";
          position: string | null;
          responsibilities: string | null;
          is_active: boolean;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          farm_id: string;
          user_id: string;
          role?: "owner" | "manager" | "viewer";
          position?: string | null;
          responsibilities?: string | null;
          is_active?: boolean;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          farm_id?: string;
          user_id?: string;
          role?: "owner" | "manager" | "viewer";
          position?: string | null;
          responsibilities?: string | null;
          is_active?: boolean;
          created_at?: string;
          updated_at?: string;
        };
      };
      visitor_entries: {
        Row: {
          id: string;
          farm_id: string;
          visit_datetime: string;
          visitor_name: string;
          visitor_phone: string;
          visitor_address: string;
          visitor_purpose: string | null;
          disinfection_check: boolean;
          vehicle_number: string | null;
          notes: string | null;
          registered_by: string | null;
          session_token: string;
          consent_given: boolean;
          profile_photo_url: string | null;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          farm_id: string;
          visit_datetime: string;
          visitor_name: string;
          visitor_phone: string;
          visitor_address: string;
          visitor_purpose?: string | null;
          disinfection_check?: boolean;
          vehicle_number?: string | null;
          notes?: string | null;
          registered_by?: string | null;
          session_token?: string;
          consent_given?: boolean;
          profile_photo_url?: string | null;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          farm_id?: string;
          visit_datetime?: string;
          visitor_name?: string;
          visitor_phone?: string;
          visitor_address?: string;
          visitor_purpose?: string | null;
          disinfection_check?: boolean;
          vehicle_number?: string | null;
          notes?: string | null;
          registered_by?: string | null;
          session_token?: string;
          consent_given?: boolean;
          profile_photo_url?: string | null;
          created_at?: string;
          updated_at?: string;
        };
      };
      system_logs: {
        Row: {
          id: string;
          level: "error" | "warn" | "info" | "debug";
          action: string;
          message: string;
          user_id: string | null;
          user_email: string | null;
          user_ip: string | null;
          user_agent: string | null;
          resource_type: string | null;
          resource_id: string | null;
          metadata: Json | null;
          created_at: string;
        };
        Insert: {
          id?: string;
          level?: "error" | "warn" | "info" | "debug";
          action: string;
          message: string;
          user_id?: string | null;
          user_email?: string | null;
          user_ip?: string | null;
          user_agent?: string | null;
          resource_type?: string | null;
          resource_id?: string | null;
          metadata?: Json | null;
          created_at?: string;
        };
        Update: {
          id?: string;
          level?: "error" | "warn" | "info" | "debug";
          action?: string;
          message?: string;
          user_id?: string | null;
          user_email?: string | null;
          user_ip?: string | null;
          user_agent?: string | null;
          resource_type?: string | null;
          resource_id?: string | null;
          metadata?: Json | null;
          created_at?: string;
        };
      };
      system_settings: {
        Row: {
          id: string;
          createdAt: string;
          updatedAt: string;
          siteName: string;
          siteDescription: string;
          language: string;
          timezone: string;
          dateFormat: string;
          favicon: string | null;
          logo: string | null;
          maxLoginAttempts: number;
          passwordMinLength: number;
          passwordRequireSpecialChar: boolean;
          passwordRequireNumber: boolean;
          reVisitAllowInterval: number;
          maxVisitorsPerDay: number;
          visitorDataRetentionDays: number;
          requireVisitorPhoto: boolean;
          requireVisitorContact: boolean;
          requireVisitPurpose: boolean;
          visitTemplate: string;
          logLevel: "error" | "warn" | "info" | "debug";
          logRetentionDays: number;
          maintenanceMode: boolean;
          debugMode: boolean;
          passwordRequireUpperCase: boolean;
          passwordRequireLowerCase: boolean;
          maintenanceContactInfo: string;
          maintenanceEstimatedTime: number;
          maintenanceMessage: string;
          maintenanceStartTime: string | null;
          accountLockoutDurationMinutes: number;
          notificationBadge: string | null;
          notificationIcon: string | null;
          pushRequireInteraction: boolean;
          pushSoundEnabled: boolean;
          pushVibrateEnabled: boolean;
          vapidPrivateKey: string | null;
          vapidPublicKey: string | null;
        };
        Insert: {
          id?: string;
          createdAt?: string;
          updatedAt: string;
          siteName?: string;
          siteDescription?: string;
          language?: string;
          timezone?: string;
          dateFormat?: string;
          favicon?: string | null;
          logo?: string | null;
          maxLoginAttempts?: number;
          passwordMinLength?: number;
          passwordRequireSpecialChar?: boolean;
          passwordRequireNumber?: boolean;
          reVisitAllowInterval?: number;
          maxVisitorsPerDay?: number;
          visitorDataRetentionDays?: number;
          requireVisitorPhoto?: boolean;
          requireVisitorContact?: boolean;
          requireVisitPurpose?: boolean;
          visitTemplate?: string;
          logLevel?: "error" | "warn" | "info" | "debug";
          logRetentionDays?: number;
          maintenanceMode?: boolean;
          debugMode?: boolean;
          passwordRequireUpperCase?: boolean;
          passwordRequireLowerCase?: boolean;
          maintenanceContactInfo?: string;
          maintenanceEstimatedTime?: number;
          maintenanceMessage?: string;
          maintenanceStartTime?: string | null;
          accountLockoutDurationMinutes?: number;
          notificationBadge?: string | null;
          notificationIcon?: string | null;
          pushRequireInteraction?: boolean;
          pushSoundEnabled?: boolean;
          pushVibrateEnabled?: boolean;
          vapidPrivateKey?: string | null;
          vapidPublicKey?: string | null;
        };
        Update: {
          id?: string;
          createdAt?: string;
          updatedAt?: string;
          siteName?: string;
          siteDescription?: string;
          language?: string;
          timezone?: string;
          dateFormat?: string;
          favicon?: string | null;
          logo?: string | null;
          maxLoginAttempts?: number;
          passwordMinLength?: number;
          passwordRequireSpecialChar?: boolean;
          passwordRequireNumber?: boolean;
          reVisitAllowInterval?: number;
          maxVisitorsPerDay?: number;
          visitorDataRetentionDays?: number;
          requireVisitorPhoto?: boolean;
          requireVisitorContact?: boolean;
          requireVisitPurpose?: boolean;
          visitTemplate?: string;
          logLevel?: "error" | "warn" | "info" | "debug";
          logRetentionDays?: number;
          maintenanceMode?: boolean;
          debugMode?: boolean;
          passwordRequireUpperCase?: boolean;
          passwordRequireLowerCase?: boolean;
          maintenanceContactInfo?: string;
          maintenanceEstimatedTime?: number;
          maintenanceMessage?: string;
          maintenanceStartTime?: string | null;
          accountLockoutDurationMinutes?: number;
          notificationBadge?: string | null;
          notificationIcon?: string | null;
          pushRequireInteraction?: boolean;
          pushSoundEnabled?: boolean;
          pushVibrateEnabled?: boolean;
          vapidPrivateKey?: string | null;
          vapidPublicKey?: string | null;
        };
      };
      user_notification_settings: {
        Row: {
          id: string;
          user_id: string;
          notification_method: string;
          visitor_alerts: boolean | null;
          emergency_alerts: boolean | null;
          maintenance_alerts: boolean | null;
          kakao_user_id: string | null;
          is_active: boolean | null;
          created_at: string | null;
          updated_at: string | null;
          notice_alerts: boolean | null;
        };
        Insert: {
          id?: string;
          user_id: string;
          notification_method: string;
          visitor_alerts?: boolean | null;
          emergency_alerts?: boolean | null;
          maintenance_alerts?: boolean | null;
          kakao_user_id?: string | null;
          is_active?: boolean | null;
          created_at?: string | null;
          updated_at?: string | null;
          notice_alerts?: boolean | null;
        };
        Update: {
          id?: string;
          user_id?: string;
          notification_method?: string;
          visitor_alerts?: boolean | null;
          emergency_alerts?: boolean | null;
          maintenance_alerts?: boolean | null;
          kakao_user_id?: string | null;
          is_active?: boolean | null;
          created_at?: string | null;
          updated_at?: string | null;
          notice_alerts?: boolean | null;
        };
      };
    };
    Views: {
      [_ in never]: never;
    };
    Functions: {
      [_ in never]: never;
    };
    Enums: {
      LogLevel: "error" | "warn" | "info" | "debug";
    };
  };
}
